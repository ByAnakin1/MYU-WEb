---
import Header from "../../components/header.astro";
import Footer from "../../components/footer.astro";

// Define la interfaz para productos
interface Product {
  id_producto: number;
  nombre_producto: string;
  precio: number;
  img1: string;
  id_categoria: number; // Agrega esta propiedad para filtrar
  descuento?: number;
}

// Llamada al backend para obtener los productos
const response = await fetch('http://localhost:3000/api/productos');

if (!response.ok) {
  console.error('Error al obtener productos:', response.statusText);
  const errorText = await response.text();
  throw new Error(`Error al obtener productos: ${errorText}`);
}

let products: Product[] = [];
try {
  products = await response.json(); // Parsear la respuesta si es válida
} catch (error) {
  console.error('Error al parsear productos:', error);
  throw new Error('La respuesta del servidor no es válida.');
}

// Filtrar los productos con id_categoria = 3
const filteredProducts = products.filter(product => product.id_categoria === 3);
---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tienda de Faldas</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            margin: 0;
            padding: 0;
            overflow-x: hidden;
            background-color: #FFF5F7;
            font-family: 'Arial', sans-serif;
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin-left: auto;
            margin-right: auto;
            padding: 2rem 0;
        }

        .cards-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .card {
            background: white;
            border-radius: 0.75rem;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.15);
        }

        .card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .card-content {
            padding: 1rem;
            text-align: center;
        }

        .card-title {
            font-size: 1.25rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
            text-transform: capitalize;
        }

        .card-price {
            color: #f56565;
            font-weight: bold;
            margin-bottom: 1rem;
        }

        .card-button {
            display: inline-block;
            background: #f6bbd0;
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            text-decoration: none;
            font-weight: bold;
            transition: background 0.3s;
        }

        .card-button:hover {
            background: #f56565;
        }

        .page-title {
            text-align: center;
            font-size: 2.5rem;
            font-weight: bold;
            color: #4A5568;
            margin-bottom: 2rem;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        .filter-button {
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            background-color: #f5bacf;
            color: white;
            border: none;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .filter-button:hover {
            background-color: #f5bacf;
        }

        .filter-button svg {
            margin-right: 0.5rem;
        }

        @media (max-width: 767px) {
            .filter-button {
                padding: 1rem 2rem;
                font-size: 1.25rem;
            }
        }

        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0, 0, 0, 0.5);
            transform: translateX(-100%);
            transition: transform 0.3s ease;
            z-index: 40;
        }

        .overlay.show {
            transform: translateX(0);
        }

        .filters {
            position: sticky;
            top: 1rem;
            background: white;
            padding: 1rem;
            border-radius: 0.5rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .overlay-content {
            width: 80%;
            max-width: 360px;
            background: white;
            height: 100%;
            padding: 2rem;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

        .no-scroll {
            overflow: hidden;
        }

        @media (max-width: 1023px) {
            .cards-container {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (min-width: 1024px) {
            .cards-container {
                grid-template-columns: repeat(4, 1fr);
            }
        }

        .card {
            width: 100%;
        }

        input[type="range"] {
            -webkit-appearance: none;
            width: 100%;
            background: transparent;
        }
        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            height: 15px;
            width: 15px;
            border-radius: 50%;
            background: #f56565;
            cursor: pointer;
        }
        input[type="range"]::-webkit-slider-runnable-track {
            height: 5px;
            background: #f6bbd0;
            border-radius: 5px;
        }

    </style>
</head>
<body>
    <Header />
    <br>
    <br>
    <br>
    <div class="container flex flex-col md:flex-row">
        <!-- Panel de filtros -->
        <aside class="filters w-full md:w-1/5 p-4 bg-white shadow-md mt-10 filter-container mr-6">
            <h2 class="font-bold text-xl mb-4">Filtros</h2>
            <div class="mb-6">
                <h3 class="font-semibold">Rango de Precios</h3>
                <ul class="space-y-2 mt-2">
                    <li><input type="checkbox" id="price-1-100" /> <label for="price-1-100">S/ 1 - S/ 100</label></li>
                    <li><input type="checkbox" id="price-100-200" /> <label for="price-100-200">S/ 100 - S/ 200</label></li>
                    <li><input type="checkbox" id="price-200-300" /> <label for="price-200-300">S/ 200 - S/ 300</label></li>
                    <li><input type="checkbox" id="price-300-400" /> <label for="price-300-400">S/ 300 - S/ 400</label></li>
                    <li><input type="checkbox" id="price-400-500" /> <label for="price-400-500">S/ 400 - S/ 500</label></li>
                </ul>
            </div>
            
            <div class="mb-6">
                <h3 class="font-semibold">Descuentos</h3>
                <ul class="space-y-2 mt-2">
                    <li><input type="checkbox" id="discount-0-20" /> <label for="discount-0-20">0% - 20%</label></li>
                    <li><input type="checkbox" id="discount-20-40" /> <label for="discount-20-40">20% - 40%</label></li>
                    <li><input type="checkbox" id="discount-40-60" /> <label for="discount-40-60">40% - 60%</label></li>
                    <li><input type="checkbox" id="discount-60-80" /> <label for="discount-60-80">60% - 80%</label></li>
                    <li><input type="checkbox" id="discount-80-90" /> <label for="discount-80-90">80% - 90%</label></li>
                </ul>
            </div>

            <div class="mb-6">
                <h3 class="font-semibold">Color</h3>
                <ul class="space-y-2 mt-2">
                    <li><input type="checkbox" id="colorAmarillo" /> <label for="colorAmarillo">Amarillo</label></li>
                    <li><input type="checkbox" id="colorAzul" /> <label for="colorAzul">Azul</label></li>
                    <li><input type="checkbox" id="colorBlanco" /> <label for="colorBlanco">Blanco</label></li>
                </ul>
            </div>
        </aside>

        <!-- Productos de faldas -->
        <main class="w-full md:w-4/5 p-4">
            <h1 class="page-title">FALDAS</h1>
            <div class="cards-container">
                {filteredProducts.length > 0 ? (
                    filteredProducts.map((product: Product) => (
                    <div class="card">
                        <img src={product.img1} alt={`Imagen de ${product.nombre_producto}`} />
                        <div class="card-content">
                        <h2 class="card-title">{product.nombre_producto}</h2>
                        
                        <div class="price-section">
                            {product.descuento && product.descuento > 0 ? (
                            <>
                                <div class="flex justify-center items-center gap-2 mt-2">
                                <span class="original-price text-sm line-through text-gray-500">
                                    S/ {Number(product.precio).toFixed(2)}
                                </span>
                                <span class="discount-badge text-sm text-white bg-red-600 px-2 py-1 rounded-md">
                                    -{Math.round(product.descuento)}%
                                </span>
                                </div>
                                <div class="flex justify-center mt-2">
                                <span class="price-tag text-xl font-bold text-red-600">
                                    S/ {(Number(product.precio) * (1 - product.descuento / 100)).toFixed(2)}
                                </span>
                                </div>
                            </>
                            ) : (
                            <div class="flex justify-center mt-2">
                                <span class="price-tag text-xl font-bold">
                                S/ {Number(product.precio).toFixed(2)}
                                </span>
                            </div>
                            )}
                        </div>
            
                        <a href={`/detalle/${product.id_producto}`} class="card-button">Comprar</a>
                        </div>
                    </div>
                    ))
                ) : (
                    <p class="text-center">No hay productos disponibles.</p>
                )}
            </div>
        </main>
    </div>

    <!-- Botón de filtro visible solo en dispositivos móviles -->
    <button class="filter-button flex items-center md:hidden" id="filterToggleMobile">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h18M3 12h18M3 19h18"></path>
        </svg>
        Filtros
    </button>

    <!-- Panel de filtros visible solo en dispositivos móviles -->
    <div class="overlay" id="filterSidebarMobile">
        <div class="overlay-content">
            <button class="text-gray-600 hover:text-gray-800 focus:outline-none" id="closeFilterMobile">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
            <h2 class="font-bold text-xl mb-4">Filtros</h2>
            <div class="mb-6">
                <h3 class="font-semibold">Rango de Precios</h3>
                <ul class="space-y-2 mt-2">
                    <li><input type="checkbox" id="price-1-100" /> <label for="price-1-100">S/ 1 - S/ 100</label></li>
                    <li><input type="checkbox" id="price-100-200" /> <label for="price-100-200">S/ 100 - S/ 200</label></li>
                    <li><input type="checkbox" id="price-200-300" /> <label for="price-200-300">S/ 200 - S/ 300</label></li>
                    <li><input type="checkbox" id="price-300-400" /> <label for="price-300-400">S/ 300 - S/ 400</label></li>
                    <li><input type="checkbox" id="price-400-500" /> <label for="price-400-500">S/ 400 - S/ 500</label></li>
                </ul>
            </div>
            
            <div class="mb-6">
                <h3 class="font-semibold">Descuentos</h3>
                <ul class="space-y-2 mt-2">
                    <li><input type="checkbox" id="discount-0-20" /> <label for="discount-0-20">0% - 20%</label></li>
                    <li><input type="checkbox" id="discount-20-40" /> <label for="discount-20-40">20% - 40%</label></li>
                    <li><input type="checkbox" id="discount-40-60" /> <label for="discount-40-60">40% - 60%</label></li>
                    <li><input type="checkbox" id="discount-60-80" /> <label for="discount-60-80">60% - 80%</label></li>
                    <li><input type="checkbox" id="discount-80-90" /> <label for="discount-80-90">80% - 90%</label></li>
                </ul>
            </div>

            <div class="mb-6">
                <h3 class="font-semibold">Color</h3>
                <ul class="space-y-2 mt-2">
                    <li><input type="checkbox" id="colorAmarillo-mobile" /> <label for="colorAmarillo-mobile">Amarillo</label></li>
                    <li><input type="checkbox" id="colorAzul-mobile" /> <label for="colorAzul-mobile">Azul</label></li>
                    <li><input type="checkbox" id="colorBlanco-mobile" /> <label for="colorBlanco-mobile">Blanco</label></li>
                </ul>
            </div>
        </div>
    </div>

    <Footer />

    <script type="module">
        let products = [];
        
        document.addEventListener('DOMContentLoaded', () => {
            const priceCheckboxes = document.querySelectorAll('input[id^="price-"]');
            const discountCheckboxes = document.querySelectorAll('input[id^="discount-"]');
            const colorCheckboxes = document.querySelectorAll('input[id^="color"]');
            const cardsContainer = document.querySelector('.cards-container');
            
            // Función para filtrar productos
            const filterProducts = () => {
                const selectedPriceRanges = Array.from(priceCheckboxes)
                    .filter(checkbox => checkbox.checked)
                    .map(checkbox => checkbox.id);
    
                const selectedDiscountRanges = Array.from(discountCheckboxes)
                    .filter(checkbox => checkbox.checked)
                    .map(checkbox => checkbox.id);
    
                const selectedColors = Array.from(colorCheckboxes)
                    .filter(checkbox => checkbox.checked)
                    .map(checkbox => checkbox.id.replace('color', '').toLowerCase());
    
                const filtered = products.filter(product => {
                    // Comprobar rango de precios
                    const isPriceMatch = selectedPriceRanges.length === 0 || selectedPriceRanges.some(range => {
                        switch (range) {
                            case 'price-1-100': return product.precio >= 1 && product.precio <= 100;
                            case 'price-100-200': return product.precio > 100 && product.precio <= 200;
                            case 'price-200-300': return product.precio > 200 && product.precio <= 300;
                            case 'price-300-400': return product.precio > 300 && product.precio <= 400;
                            case 'price-400-500': return product.precio > 400 && product.precio <= 500;
                            default: return false;
                        }
                    });
    
                    // Comprobar rango de descuentos
                    const isDiscountMatch = selectedDiscountRanges.length === 0 || selectedDiscountRanges.some(range => {
                        const discount = product.descuento || 0;
                        switch (range) {
                            case 'discount-0-20': return discount >= 0 && discount <= 20;
                            case 'discount-20-40': return discount > 20 && discount <= 40;
                            case 'discount-40-60': return discount > 40 && discount <= 60;
                            case 'discount-60-80': return discount > 60 && discount <= 80;
                            case 'discount-80-90': return discount > 80 && discount <= 90;
                            default: return false;
                        }
                    });
    
                    // Comprobar colores
                    const isColorMatch = selectedColors.length === 0 || selectedColors.includes(product.color?.toLowerCase());
    
                    // Validar todas las condiciones
                    return isPriceMatch && isDiscountMatch && isColorMatch;
                });
    
                renderProducts(filtered); // Renderizar los productos filtrados
            };
    
            // Función para renderizar productos
            const renderProducts = (products) => {
                cardsContainer.innerHTML = ''; // Limpiar contenedor
    
                if (products.length === 0) {
                    cardsContainer.innerHTML = '<p class="text-center">No hay productos disponibles.</p>';
                    return;
                }
    
                products.forEach(product => {
                    const card = document.createElement('div');
                    card.className = 'card';
    
                    card.innerHTML = `
                        <img src="${product.img1}" alt="Imagen de ${product.nombre_producto}" />
                        <div class="card-content">
                            <h2 class="card-title">${product.nombre_producto}</h2>
                            <div class="price-section">
                                ${product.descuento && product.descuento > 0
                                    ? `
                                    <div class="flex justify-center items-center gap-2 mt-2">
                                        <span class="original-price text-sm line-through text-gray-500">
                                            S/ ${product.precio.toFixed(2)}
                                        </span>
                                        <span class="discount-badge">
                                            -${Math.round(product.descuento)}%
                                        </span>
                                    </div>
                                    <div class="flex justify-center mt-2">
                                        <span class="price-tag text-xl font-bold text-red-600">
                                            S/ ${(product.precio * (1 - product.descuento / 100)).toFixed(2)}
                                        </span>
                                    </div>` 
                                    : `
                                    <div class="flex justify-center mt-2">
                                        <span class="price-tag text-xl font-bold">
                                            S/ ${product.precio.toFixed(2)}
                                        </span>
                                    </div>`}
                            </div>
                            <a href="/detalle/${product.id_producto}" class="card-button">Comprar</a>
                        </div>
                    `;
    
                    cardsContainer.appendChild(card);
                });
            };
    
            // Agregar eventos a los checkboxes
            [...priceCheckboxes, ...discountCheckboxes, ...colorCheckboxes].forEach(checkbox => {
                checkbox.addEventListener('change', filterProducts);
            });
    
            // Renderizar todos los productos inicialmente
            renderProducts(products);
        });
    </script> 
    </body>
</html>