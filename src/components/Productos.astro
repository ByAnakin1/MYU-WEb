---
interface Product {
  id_producto: number;
  nombre_producto: string;
  precio: number;
  img1: string;
  id_categoria: number;
  descuento?: number;
}

// Realizar la solicitud para obtener todos los productos
const response = await fetch('http://localhost:3000/api/productos');

if (!response.ok) {
  console.error('Error al obtener productos:', response.statusText);
  const errorText = await response.text();
  throw new Error(`Error al obtener productos: ${errorText}`);
}

let products: Product[] = [];
try {
  products = await response.json();
} catch (error) {
  console.error('Error al parsear productos:', error);
  throw new Error('La respuesta del servidor no es válida.');
}

// Filtrar 20 productos aleatorios
const randomProducts = products.sort(() => Math.random() - 0.5).slice(0, 20);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Productos</title>

    <!-- Swiper CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
    <script src="https://cdn.tailwindcss.com"></script>

    <style>
      .container {
        max-width: 1370px;
        margin: 0 auto;
        padding: 0 1rem;
      }

      .cards-container {
        display: grid;
        gap: 1.5rem; /* Espacio entre las tarjetas */
        grid-template-columns: repeat(5, 1fr); /* Número de columnas para tarjetas */
      }

      .section-title {
        text-align: center;
        font-size: 1.5rem;
        font-weight: bold;
        background-color: #f6bbd0;
        color: white;
        padding: 0.75rem;
        margin-bottom: 1.5rem;
      }

      @media (max-width: 767px) {
        .cards-container {
          grid-template-columns: repeat(2, 1fr); /* 2 columnas en pantallas pequeñas */
          gap: 1rem; /* Espacio entre tarjetas en pantallas pequeñas */
        }
      }

      @media (min-width: 768px) and (max-width: 1023px) {
        .cards-container {
          grid-template-columns: repeat(3, 1fr); /* 3 columnas en pantallas medianas */
          gap: 1.25rem; /* Espacio entre tarjetas en pantallas medianas */
        }
      }

      @media (min-width: 1024px) {
        .cards-container {
          grid-template-columns: repeat(5, 1fr); /* 5 columnas en pantallas grandes */
        }
      }

      .card {
        background: white;
        border-radius: 0.75rem;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        max-width: 280px; /* Ancho de la tarjeta ajustado */
        margin: 0 auto;
        margin-bottom: 2rem; /* Espacio inferior entre las tarjetas */
      }

      .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 18px rgba(0, 0, 0, 0.15);
      }

      .card img {
        width: 100%;
        height: 280px; /* Alto de la imagen ajustado */
        object-fit: cover;
      }

      .card-content {
        padding: 0.75rem;
        text-align: center;
      }

      .card-title {
        font-size: 0.9rem; /* Tamaño de la fuente */
        font-weight: bold;
        margin-bottom: 0.4rem;
        text-transform: capitalize;
      }

      .card-price {
        color: #f56565; /* Rojo para el precio */
        font-size: 0.95rem; /* Tamaño de fuente ajustado */
        font-weight: bold;
        margin-bottom: 0.5rem;
      }

      .card-button {
        display: block;
        background: #f6bbd0; /* Fondo rosado para el botón */
        color: white; /* Color blanco para el texto del botón */
        padding: 0.75rem 1rem;
        border-radius: 0.5rem;
        text-decoration: none;
        font-weight: bold;
        transition: background 0.3s;
        width: 100%;
        text-align: center;
        margin-top: 1rem; /* Mueve el botón un poco más abajo */
      }

      .card-button:hover {
        background: #f56565; /* Fondo rojo cuando el cursor está sobre el botón */
        color: white; /* Mantener el color blanco para el texto */
      }
    </style>
  </head>

  <body>
    <h2 class="section-title">PRODUCTOS</h2>

    <section class="container mx-auto">
      <div class="swiper mySwiper">
        <div class="swiper-wrapper">
          {randomProducts.length > 0 ? (
            randomProducts.map((product: Product) => (
              <div class="swiper-slide">
                <div class="card">
                  <img src={product.img1} alt={`Imagen de ${product.nombre_producto}`} />
                  <div class="card-content">
                    <h2 class="card-title">{product.nombre_producto}</h2>
                    <div class="price-section">
                      {product.descuento && product.descuento > 0 ? (
                        <>
                          <div class="flex justify-center items-center gap-2 mt-2">
                            <span class="original-price text-sm line-through text-gray-500">
                              S/ {Number(product.precio).toFixed(2)}
                            </span>
                            <span class="discount-badge text-sm text-white bg-red-600 px-2 py-1 rounded-md">
                              -{Math.round(product.descuento)}%
                            </span>
                          </div>
                          <div class="flex justify-center mt-2">
                            <span class="price-tag text-xl font-bold text-red-600">
                              S/ {(Number(product.precio) * (1 - product.descuento / 100)).toFixed(2)}
                            </span>
                          </div>
                        </>
                      ) : (
                        <div class="flex justify-center mt-2">
                          <span class="price-tag text-xl font-bold">
                            S/ {Number(product.precio).toFixed(2)}
                          </span>
                        </div>
                      )}
                    </div>
                    <a href={`/detalle/${product.id_producto}`} class="card-button">Comprar</a>
                  </div>
                </div>
              </div>
            ))
          ) : (
            <p class="text-center">No hay productos disponibles.</p>
          )}
        </div>
      </div>
    </section>

    <!-- Swiper JS -->
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script type="module">
      import Swiper from "https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.mjs";

      var swiper = new Swiper(".mySwiper", {
        slidesPerView: 4, /* Número de tarjetas visibles */
        spaceBetween: 30, /* Espacio entre las tarjetas */
        pagination: {
          el: ".swiper-pagination",
          clickable: true,
        },
        breakpoints: {
          1556: { slidesPerView: 5, spaceBetween: 30 },
          1024: { slidesPerView: 4, spaceBetween: 25 },
          768: { slidesPerView: 3, spaceBetween: 20 },
          400: { slidesPerView: 2, spaceBetween: 15 },
        },
      });
    </script>
  </body>
</html>
